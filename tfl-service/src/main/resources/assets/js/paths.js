var bb = bb || {};
bb.tl = bb.tl || {};
bb.tl.lines = bb.tl.lines || {};

// TUBE PATH DATA
bb.tl.lines['Central'] = { strings: [], color: '#ED3024', paths: [], stations: [] };
bb.tl.lines['Central'].strings.push('M 222.76 174.79 L 222.76 513.22');
bb.tl.lines['Central'].strings.push('M 222.76 513.22 C 222.76 518.09 225.58 524.9 229.02 528.34');
bb.tl.lines['Central'].strings.push('M 229.02 528.34 L 486.28 785.59');
bb.tl.lines['Central'].strings.push('M 486.28 785.59 C 489.72 789.04 496.53 791.85 501.39 791.85');
bb.tl.lines['Central'].strings.push('M 501.39 791.85');
bb.tl.lines['Central'].strings.push('M 2034.1 394.45 C 2034.1 386.84 2040.26 380.68 2047.87 380.68');
bb.tl.lines['Central'].strings.push('M 2047.87 380.68 L 2174.94 380.68');
bb.tl.lines['Central'].strings.push('M 2174.94 380.68 C 2182.54 380.68 2188.71 374.51 2188.71 366.9');
bb.tl.lines['Central'].strings.push('M 2188.71 366.9 L 2188.71 211.99');
bb.tl.lines['Central'].strings.push('M 2188.71 211.99 C 2188.71 204.39 2182.54 198.22 2174.94 198.22');
bb.tl.lines['Central'].strings.push('M 2174.94 198.22 L 2047.87 198.22');
bb.tl.lines['Central'].strings.push('M 2047.87 198.22 C 2040.26 198.22 2034.1 204.39 2034.1 211.99');
bb.tl.lines['Central'].strings.push('M 2034.1 211.99');
bb.tl.lines['Central'].strings.push('M 2034.1 12.35 L 2034.1 529.16');
bb.tl.lines['Central'].strings.push('M 2034.1 529.16 C 2034.1 531.97 2031.28 538.79 2027.84 542.22');
bb.tl.lines['Central'].strings.push('M 2027.84 542.22 L 1880.1 689.97');
bb.tl.lines['Central'].strings.push('M 1880.1 689.97 C 1876.66 693.41 1869.86 696.23 1864.99 696.23');
bb.tl.lines['Central'].strings.push('M 1864.98 696.22 L 1664.97 696.22');
bb.tl.lines['Central'].strings.push('M 1664.97 696.22 C 1660.1 696.22 1653.3 699.04 1649.85 702.49');
bb.tl.lines['Central'].strings.push('M 1649.85 702.49 L 1520.99 831.36');
bb.tl.lines['Central'].strings.push('M 1520.99 831.36 C 1517.54 834.8 1510.74 837.62 1505.87 837.62');
bb.tl.lines['Central'].strings.push('M 1505.87 837.62 L 1426.38 837.62');
bb.tl.lines['Central'].strings.push('M 1426.38 837.62 C 1421.51 837.62 1414.72 834.8 1411.27 831.36');
bb.tl.lines['Central'].strings.push('M 1411.27 831.36 L 1378.03 798.12');
bb.tl.lines['Central'].strings.push('M 1378.03 798.12 C 1374.59 794.67 1367.79 791.86 1362.92 791.86');
bb.tl.lines['Central'].strings.push('M 1362.92 791.86 L 318.04 791.86');

bb.tl.lines['Circle'] = { strings: [], color: '#FFD200', paths: [], stations: [] };
bb.tl.lines['Circle'].strings.push('M 664.95 955.89 L 664.95 737.93');
bb.tl.lines['Circle'].strings.push('M 664.95 737.93 C 664.93 736.76 665.4 734.47 666.28 732.39');
bb.tl.lines['Circle'].strings.push('M 666.28 732.39 C 667.13 730.29 668.42 728.34 669.26 727.53');
bb.tl.lines['Circle'].strings.push('M 669.26 727.53 L 742.79 654');
bb.tl.lines['Circle'].strings.push('M 742.79 654 C 746.91 649.89 752.25 647.68 758.06 647.68');
bb.tl.lines['Circle'].strings.push('M 758.06 647.68 L 1369.42 647.67');
bb.tl.lines['Circle'].strings.push('M 1369.42 647.67 C 1375.39 647.67 1380.79 650.09 1384.71 654');
bb.tl.lines['Circle'].strings.push('M 1384.71 654 L 1462.96 732.25');
bb.tl.lines['Circle'].strings.push('M 1462.96 732.25 C 1466.88 736.16 1472.28 738.57 1478.25 738.57');
bb.tl.lines['Circle'].strings.push('M 1478.25 738.57 L 1628 738.57');
bb.tl.lines['Circle'].strings.push('M 1628 738.57 C 1633.97 738.57 1639.37 740.99 1643.28 744.9');
bb.tl.lines['Circle'].strings.push('M 1643.28 744.9 C 1647.19 748.82 1649.61 754.22 1649.61 760.18');
bb.tl.lines['Circle'].strings.push('M 1649.61 760.18 L 1649.61 862.46');
bb.tl.lines['Circle'].strings.push('M 1649.61 862.46 C 1649.61 868.42 1647.19 873.83 1643.28 877.74');
bb.tl.lines['Circle'].strings.push('M 1643.28 877.74 S 1633.97 884.07 1628 884.07');
bb.tl.lines['Circle'].strings.push('M 1628 884.07 L 1472.08 884.07');
bb.tl.lines['Circle'].strings.push('M 1472.08 884.07 C 1466.11 884.07 1460.71 886.49 1456.8 890.4');
bb.tl.lines['Circle'].strings.push('M 1456.8 890.4 L 1364.97 982.24');
bb.tl.lines['Circle'].strings.push('M 1364.97 982.24 C 1362.14 985.06 1358.38 986.62 1354.39 986.62');
bb.tl.lines['Circle'].strings.push('M 1354.39 986.62 L 850.56 986.62');
bb.tl.lines['Circle'].strings.push('M 850.56 986.62 C 844.6 986.62 839.19 984.2 835.28 980.3');
bb.tl.lines['Circle'].strings.push('M 835.28 980.3 C 831.06 976.07 828.95 970.54 828.95 965.01');
bb.tl.lines['Circle'].strings.push('M 828.95 965.01 L 828.95 686.76');
bb.tl.lines['Circle'].strings.push('M 828.95 686.76 C 828.95 680.79 831.37 675.39 835.28 671.48');
bb.tl.lines['Circle'].strings.push('M 835.28 671.48 C 839.19 667.56 844.6 665.15 850.56 665.15');
bb.tl.lines['Circle'].strings.push('M 850.56 665.15 L 907.19 665.15');

bb.tl.lines['Picadilly'] = { strings: [], color: '#1C3E93', paths: [], stations: [] };
bb.tl.lines['Picadilly'].strings.push('M 131.33 1092.97 C 126.67 1097.63 124.34 1103.73 124.34 1109.85');
bb.tl.lines['Picadilly'].strings.push('M 124.34 1109.85 L 124.34 1157.6');
bb.tl.lines['Picadilly'].strings.push('M 124.34 1157.6 C 124.34 1163.71 122.01 1169.82 117.35 1174.48');
bb.tl.lines['Picadilly'].strings.push('M 117.35 1174.48 C 117.12 1174.72 117.35 1174.48 117.35 1174.48');
bb.tl.lines['Picadilly'].strings.push('M 117.35 1174.48 C 113.03 1178.79 107.06 1181.47 100.48 1181.47');
bb.tl.lines['Picadilly'].strings.push('M 100.48 1181.47 C 94.37 1181.47 88.26 1179.13 83.61 1174.48');
bb.tl.lines['Picadilly'].strings.push('M 83.61 1174.48 C 79.29 1170.14 76.63 1164.18 76.63 1157.6');
bb.tl.lines['Picadilly'].strings.push('M 76.63 1157.6 C 76.63 1151 79.3 1145.02 83.64 1140.7');
bb.tl.lines['Picadilly'].strings.push('M 83.64 1140.7 L 131.47 1092.87');
bb.tl.lines['Picadilly'].strings.push('M 131.47 1092.87');
bb.tl.lines['Picadilly'].strings.push('M 30.17 1194.13 L 340.73 883.57');
bb.tl.lines['Picadilly'].strings.push('M 340.73 883.57 C 344.17 880.12 350.97 877.31 355.84 877.31');
bb.tl.lines['Picadilly'].strings.push('M 355.84 877.31 L 487.85 877.31');
bb.tl.lines['Picadilly'].strings.push('M 1633.34 -36.55 L 1633.34 214.15');
bb.tl.lines['Picadilly'].strings.push('M 1633.34 214.15 C 1633.34 219.02 1630.53 225.82 1627.08 229.27');
bb.tl.lines['Picadilly'].strings.push('M 1627.08 229.27 L 1305.58 550.78');
bb.tl.lines['Picadilly'].strings.push('M 1305.58 550.78 C 1302.13 554.22 1299.31 561.02 1299.31 565.89');
bb.tl.lines['Picadilly'].strings.push('M 1299.31 565.89 L 1299.31 664.63');
bb.tl.lines['Picadilly'].strings.push('M 1299.31 664.63 C 1299.31 669.5 1296.49 676.3 1293.05 679.74');
bb.tl.lines['Picadilly'].strings.push('M 1293.05 679.74 L 1206.9 765.89');
bb.tl.lines['Picadilly'].strings.push('M 1206.9 765.89 C 1203.46 769.33 1196.66 772.15 1191.78 772.15');
bb.tl.lines['Picadilly'].strings.push('M 1191.78 772.15 L 1034.83 772.15');
bb.tl.lines['Picadilly'].strings.push('M 1034.83 772.15 C 1029.96 772.15 1023.16 774.97 1019.71 778.41');
bb.tl.lines['Picadilly'].strings.push('M 1019.71 778.41 L 927.08 871.03');
bb.tl.lines['Picadilly'].strings.push('M 927.08 871.03 C 923.64 874.47 916.83 877.3 911.96 877.3');
bb.tl.lines['Picadilly'].strings.push('M 911.96 877.3 L 387.08 877.3');
bb.tl.lines['Picadilly'].strings.push('M 397.68 877.31 C 390.18 877.29 382.81 874.48 377.08 868.77');
bb.tl.lines['Picadilly'].strings.push('M 377.08 868.77 L 370.11 861.81');
bb.tl.lines['Picadilly'].strings.push('M 370.11 861.81 C 367.39 859.08 365.73 855.39 365.73 851.23');
bb.tl.lines['Picadilly'].strings.push('M 365.73 851.23 L 365.73 218.19');
bb.tl.lines['Picadilly'].strings.push('M 365.73 218.19 C 365.73 213.32 362.9 206.53 359.46 203.09');
bb.tl.lines['Picadilly'].strings.push('M 359.46 203.09 C 359.46 203.09 291.05 135.02 288.15 132.12');
bb.tl.lines['Picadilly'].strings.push('M 288.15 132.12 C 285.35 129.32 279.81 126.3 275.25 126.3');
bb.tl.lines['Picadilly'].strings.push('M 275.25 126.3 C 269.68 126.3 27.14 126.3 27.14 126.3');

bb.tl.lines['Metropolitan'] = { strings: [], color: '#96005E', paths: [], stations: [] };
bb.tl.lines['Metropolitan'].strings.push('M 325.95 134.83 C 322.5 131.38 319.69 124.58 319.69 119.72');
bb.tl.lines['Metropolitan'].strings.push('M 319.69 119.72 L 319.69 64.47');
bb.tl.lines['Metropolitan'].strings.push('M 319.69 64.47');
bb.tl.lines['Metropolitan'].strings.push('M 124.99 65.81 C 120.12 65.81 113.32 62.99 109.88 59.55');
bb.tl.lines['Metropolitan'].strings.push('M 109.88 59.55 L 78 27.67');
bb.tl.lines['Metropolitan'].strings.push('M 25.3 220.66 L 280.25 220.66');
bb.tl.lines['Metropolitan'].strings.push('M 280.25 220.66 C 286.22 220.66 293.54 224.12 297.76 228.34');
bb.tl.lines['Metropolitan'].strings.push('M 297.76 228.34 L 376.52 307.1');
bb.tl.lines['Metropolitan'].strings.push('M 376.52 307.1 C 379.96 310.55 386.76 313.36 391.63 313.36');
bb.tl.lines['Metropolitan'].strings.push('M 391.63 313.36 L 539.01 313.36');
bb.tl.lines['Metropolitan'].strings.push('M 1077.23 656.28 L 1371.43 656.31');
bb.tl.lines['Metropolitan'].strings.push('M 1371.43 656.31 C 1375.43 656.31 1379.19 657.86 1382.01 660.69');
bb.tl.lines['Metropolitan'].strings.push('M 1382.01 660.69');
bb.tl.lines['Metropolitan'].strings.push('M 21.9 65.81 L 248.06 65.81');
bb.tl.lines['Metropolitan'].strings.push('M 248.06 65.81 C 252.93 65.81 259.73 68.62 263.18 72.07');
bb.tl.lines['Metropolitan'].strings.push('M 263.18 72.07 L 498.11 307.09');
bb.tl.lines['Metropolitan'].strings.push('M 498.11 307.09 C 501.55 310.54 508.35 313.35 513.22 313.35');
bb.tl.lines['Metropolitan'].strings.push('M 513.22 313.35 L 708.42 313.36');
bb.tl.lines['Metropolitan'].strings.push('M 708.42 313.36 C 713.29 313.36 720.09 316.18 723.54 319.62');
bb.tl.lines['Metropolitan'].strings.push('M 723.54 319.62 L 1053.92 650.01');
bb.tl.lines['Metropolitan'].strings.push('M 1053.92 650.01 C 1057.37 653.45 1064.16 656.28 1069.03 656.28');
bb.tl.lines['Metropolitan'].strings.push('M 1069.03 656.28 L 1371.43 656.31');
bb.tl.lines['Metropolitan'].strings.push('M 1371.43 656.31 C 1375.43 656.31 1379.19 657.86 1382.01 660.69');
bb.tl.lines['Metropolitan'].strings.push('M 1382.01 660.69 L 1460.27 738.94');
bb.tl.lines['Metropolitan'].strings.push('M 1460.27 738.94 C 1465.62 744.28 1472.71 747.22 1480.26 747.22');
bb.tl.lines['Metropolitan'].strings.push('M 1480.26 747.22 L 1630.01 747.22');
bb.tl.lines['Metropolitan'].strings.push('M 1630.01 747.22 C 1634 747.22 1637.77 748.77 1640.59 751.6');
bb.tl.lines['Metropolitan'].strings.push('M 1640.59 751.6 C 1643.41 754.43 1644.97 758.18 1644.97 762.18');
bb.tl.lines['Metropolitan'].strings.push('M 1644.97 762.18 L 1644.97 835.48');

bb.tl.lines['Bakerloo'] = { strings: [], color: '#AF6010', paths: [], stations: [] };
bb.tl.lines['Bakerloo'].strings.push('M 663.12 567.01 C 659.3 563.18 656.86 557.45 656.86 551.89');
bb.tl.lines['Bakerloo'].strings.push('M 656.86 551.89');
bb.tl.lines['Bakerloo'].strings.push('M 1268.69 1235.05 L 1244.88 1211.23');
bb.tl.lines['Bakerloo'].strings.push('M 1244.88 1211.23 C 1241.44 1207.78 1238.62 1200.98 1238.62 1196.11');
bb.tl.lines['Bakerloo'].strings.push('M 1238.62 1196.11 L 1238.62 962.8');
bb.tl.lines['Bakerloo'].strings.push('M 1238.62 962.8 C 1238.62 957.94 1235.8 951.13 1232.35 947.69');
bb.tl.lines['Bakerloo'].strings.push('M 1232.35 947.69 L 1107.59 822.92');
bb.tl.lines['Bakerloo'].strings.push('M 1107.59 822.92 C 1104.15 819.48 1101.33 812.68 1101.33 807.81');
bb.tl.lines['Bakerloo'].strings.push('M 1101.33 807.81 L 1101.33 759.25');
bb.tl.lines['Bakerloo'].strings.push('M 1101.33 759.25 C 1101.33 754.38 1098.52 747.58 1095.07 744.14');
bb.tl.lines['Bakerloo'].strings.push('M 1095.07 744.14 L 979.87 628.94');
bb.tl.lines['Bakerloo'].strings.push('M 979.87 628.94 C 976.43 625.5 969.63 622.68 964.76 622.68');
bb.tl.lines['Bakerloo'].strings.push('M 964.76 622.68 L 727.64 622.67');
bb.tl.lines['Bakerloo'].strings.push('M 727.64 622.67 C 722.77 622.67 715.96 619.85 712.53 616.41');
bb.tl.lines['Bakerloo'].strings.push('M 712.53 616.41 L 663.12 567.01');
bb.tl.lines['Bakerloo'].strings.push('M 663.12 567.01 C 659.3 563.18 656.86 557.45 656.86 551.89');
bb.tl.lines['Bakerloo'].strings.push('M 656.86 551.89 L 656.86 545.38');
bb.tl.lines['Bakerloo'].strings.push('M 656.86 545.38 C 656.86 540.51 656.86 532.54 656.86 527.67');
bb.tl.lines['Bakerloo'].strings.push('M 656.86 527.67 L 656.86 221.34');

bb.tl.lines['Northern'] = { strings: [], color: '#231F20', paths: [], stations: [] };
bb.tl.lines['Northern'].strings.push('M 1340.95 188.45 C 1340.95 183.58 1338.14 176.78 1334.69 173.34');
bb.tl.lines['Northern'].strings.push('M 1334.69 173.34 C 1332.33 170.98 1332.45 171.09 1295.9 134.54');
bb.tl.lines['Northern'].strings.push('M 1278.48 598.66 L 1278.48 535.2');
bb.tl.lines['Northern'].strings.push('M 1278.48 535.2 C 1278.48 530.33 1275.67 523.53 1272.22 520.09');
bb.tl.lines['Northern'].strings.push('M 1272.22 520.09 L 1271.46 519.32');
bb.tl.lines['Northern'].strings.push('M 1271.46 519.32 C 1268.02 515.88 1265.2 509.07 1265.2 504.21');
bb.tl.lines['Northern'].strings.push('M 1265.2 504.21 L 1265.2 485.88');
bb.tl.lines['Northern'].strings.push('M 1265.2 485.88 C 1265.2 481 1268.02 474.2 1271.46 470.76');
bb.tl.lines['Northern'].strings.push('M 1271.46 470.76 L 1334.7 407.51');
bb.tl.lines['Northern'].strings.push('M 1334.7 407.51 C 1338.15 404.07 1340.97 397.27 1340.97 392.4');
bb.tl.lines['Northern'].strings.push('M 1340.97 392.4 L 1340.97 49.42');
bb.tl.lines['Northern'].strings.push('M 1212.79 1285.16 C 1216.23 1281.72 1219.05 1274.91 1219.05 1270.04');
bb.tl.lines['Northern'].strings.push('M 1219.05 1270.04 L 1219.05 653.6');
bb.tl.lines['Northern'].strings.push('M 1219.05 653.6 C 1219.05 648.73 1221.87 641.93 1225.31 638.48');
bb.tl.lines['Northern'].strings.push('M 1225.31 638.48 L 1245.66 618.12');
bb.tl.lines['Northern'].strings.push('M 1245.66 618.12 C 1249.11 614.68 1251.92 608.07 1251.92 603.44');
bb.tl.lines['Northern'].strings.push('M 1251.92 603.44 L 1251.92 535.2');
bb.tl.lines['Northern'].strings.push('M 1251.92 535.2 C 1251.92 530.33 1254.74 523.53 1258.18 520.09');
bb.tl.lines['Northern'].strings.push('M 1258.18 520.09 L 1258.94 519.32');
bb.tl.lines['Northern'].strings.push('M 1258.94 519.32 C 1262.39 515.88 1265.2 509.07 1265.2 504.21');
bb.tl.lines['Northern'].strings.push('M 1265.2 504.21 L 1265.2 485.88');
bb.tl.lines['Northern'].strings.push('M 1265.2 485.88 C 1265.2 481 1262.39 474.2 1258.94 470.76');
bb.tl.lines['Northern'].strings.push('M 1258.94 470.76 C 1255.41 467.24 955.38 167.2 955.38 167.2');
bb.tl.lines['Northern'].strings.push('M 955.38 167.2');
bb.tl.lines['Northern'].strings.push('M 904.33 1593.6 L 1476.75 1021.2');
bb.tl.lines['Northern'].strings.push('M 1476.75 1021.2 C 1480.19 1017.75 1483.01 1010.95 1483.01 1006.08');
bb.tl.lines['Northern'].strings.push('M 1483.01 1006.08 L 1483.01 644.15');
bb.tl.lines['Northern'].strings.push('M 1483.01 644.15 C 1483.01 638.18 1480.59 632.78 1476.68 628.87');
bb.tl.lines['Northern'].strings.push('M 1476.68 628.87 C 1472.77 624.95 1467.35 622.54 1461.39 622.54');
bb.tl.lines['Northern'].strings.push('M 1461.39 622.54 L 1299.77 622.54');
bb.tl.lines['Northern'].strings.push('M 1299.77 622.54 C 1288.02 622.54 1278.48 613.01 1278.48 601.25');
bb.tl.lines['Northern'].strings.push('M 1278.48 601.25 L 1278.48 535.2');
bb.tl.lines['Northern'].strings.push('M 1278.48 535.2 C 1278.48 530.33 1275.67 523.53 1272.22 520.09');
bb.tl.lines['Northern'].strings.push('M 1272.22 520.09 L 1271.46 519.32');
bb.tl.lines['Northern'].strings.push('M 1271.46 519.32 C 1268.02 515.88 1265.2 509.07 1265.2 504.21');
bb.tl.lines['Northern'].strings.push('M 1265.2 504.21 L 1265.2 485.88');
bb.tl.lines['Northern'].strings.push('M 1265.2 485.88 C 1265.2 481 1268.02 474.2 1271.46 470.76');

bb.tl.lines['District'] = { strings: [], color: '#00843F', paths: [], stations: [] };
bb.tl.lines['District'].strings.push('M 478.27 996.27 C 472.3 996.27 466.89 998.69 462.99 1002.6');
bb.tl.lines['District'].strings.push('M 462.99 1002.6 C 459.08 1006.51 456.66 1011.91 456.66 1017.89');
bb.tl.lines['District'].strings.push('M 456.66 1017.89 L 456.66 1177.98');
bb.tl.lines['District'].strings.push('M 2408.41 377.53 L 2067.13 718.81');
bb.tl.lines['District'].strings.push('M 2067.13 718.81 C 2063.69 722.26 2056.89 725.08 2052.02 725.08');
bb.tl.lines['District'].strings.push('M 2052.02 725.08 L 1830.59 725.07');
bb.tl.lines['District'].strings.push('M 1830.59 725.07 C 1825.73 725.07 1818.92 727.88 1815.48 731.33');
bb.tl.lines['District'].strings.push('M 1815.48 731.33 L 1661.38 885.44');
bb.tl.lines['District'].strings.push('M 1661.38 885.44 C 1656.04 890.78 1648.94 893.72 1641.39 893.72');
bb.tl.lines['District'].strings.push('M 1641.39 893.72 L 1476.08 893.72');
bb.tl.lines['District'].strings.push('M 1476.08 893.72 C 1472.09 893.72 1468.33 895.27 1465.5 898.1');
bb.tl.lines['District'].strings.push('M 1465.5 898.1 L 1373.67 989.93');
bb.tl.lines['District'].strings.push('M 1373.67 989.93 C 1369.76 993.84 1364.36 996.26 1358.39 996.26');
bb.tl.lines['District'].strings.push('M 1358.39 996.26 L 409.21 996.26');
bb.tl.lines['District'].strings.push('M 409.21 996.26 C 403.24 996.26 397.84 993.84 393.93 989.93');
bb.tl.lines['District'].strings.push('M 393.93 989.93 L 372.4 968.41');
bb.tl.lines['District'].strings.push('M 372.4 968.41 C 368.49 964.51 366.07 959.1 366.07 953.13');
bb.tl.lines['District'].strings.push('M 366.07 953.13 L 366.07 822.13');
bb.tl.lines['District'].strings.push('M 366.07 822.13 C 366.07 816.16 363.65 810.76 359.74 806.85');
bb.tl.lines['District'].strings.push('M 359.74 806.85 C 355.83 802.94 350.43 800.52 344.46 800.52');
bb.tl.lines['District'].strings.push('M 344.46 800.52 C 339 800.52 327.16 800.52 327.16 800.52');
bb.tl.lines['District'].strings.push('M 327.16 800.52');
bb.tl.lines['District'].strings.push('M 804.1 996.39 C 798.13 996.39 792.73 998.81 788.82 1002.72');
bb.tl.lines['District'].strings.push('M 788.82 1002.72 S 782.49 1012.03 782.49 1018.01');
bb.tl.lines['District'].strings.push('M 782.49 1018.01 C 782.49 1023.81 782.49 1343.07 782.49 1343.07');
bb.tl.lines['District'].strings.push('M 782.49 1343.07');
bb.tl.lines['District'].strings.push('M 804.1 996.39 C 798.13 996.39 792.73 993.97 788.82 990.06');
bb.tl.lines['District'].strings.push('M 788.82 990.06 C 784.91 986.15 782.49 980.74 782.49 974.78');
bb.tl.lines['District'].strings.push('M 782.49 974.78 C 782.49 968.97 782.49 909.04 782.49 909.04');
bb.tl.lines['District'].strings.push('M 804.69 996.39 C 810.65 996.39 816.52 993.5 819.97 990.06');
bb.tl.lines['District'].strings.push('M 819.97 990.06 C 823.42 986.6 826.3 980.74 826.3 974.78');
bb.tl.lines['District'].strings.push('M 826.3 974.78 L 826.3 689.76');
bb.tl.lines['District'].strings.push('M 826.3 689.76 C 826.3 682.21 829.24 675.11 834.58 669.78');
bb.tl.lines['District'].strings.push('M 834.58 669.78 C 839.92 664.44 847.02 661.5 854.56 661.5');
bb.tl.lines['District'].strings.push('M 854.56 661.5 L 910.87 661.5');

bb.tl.lines['Hammersmith'] = { strings: [], color: '#F285A0', paths: [], stations: [] };
bb.tl.lines['Hammersmith'].strings.push('M 660.29 955.89 L 660.29 737.93');
bb.tl.lines['Hammersmith'].strings.push('M 660.29 737.93 C 660.29 733.06 663.11 726.26 666.55 722.81');
bb.tl.lines['Hammersmith'].strings.push('M 666.55 722.81 L 740.08 649.28');
bb.tl.lines['Hammersmith'].strings.push('M 740.08 649.28 C 745.42 643.94 752.52 641.01 760.07 641.01');
bb.tl.lines['Hammersmith'].strings.push('M 760.07 641.01 L 1371.43 641.01');
bb.tl.lines['Hammersmith'].strings.push('M 1371.43 641.01 C 1378.98 641.01 1386.08 643.95 1391.42 649.28');
bb.tl.lines['Hammersmith'].strings.push('M 1391.42 649.28 L 1469.68 727.53');
bb.tl.lines['Hammersmith'].strings.push('M 1469.68 727.53 C 1472.51 730.35 1476.26 731.9 1480.26 731.9');
bb.tl.lines['Hammersmith'].strings.push('M 1480.26 731.9 L 1630.01 731.9');
bb.tl.lines['Hammersmith'].strings.push('M 1630.01 731.9 C 1637.56 731.9 1644.66 734.85 1650 740.17');
bb.tl.lines['Hammersmith'].strings.push('M 1650 740.17 C 1655.34 745.52 1658.27 752.61 1658.27 760.16');
bb.tl.lines['Hammersmith'].strings.push('M 1658.27 760.16 C 1658.27 768.34 1658.27 806.11 1658.27 806.11');
bb.tl.lines['Hammersmith'].strings.push('M 1658.27 806.11 C 1658.27 811.64 1660.38 817.17 1664.6 821.38');
bb.tl.lines['Hammersmith'].strings.push('M 1664.6 821.38 L 1672.19 828.94');
bb.tl.lines['Hammersmith'].strings.push('M 1672.19 828.94 C 1676.93 833.68 1680.07 836.05 1686.28 836.05');
bb.tl.lines['Hammersmith'].strings.push('M 1686.28 836.05 S 1698.71 833.68 1703.45 828.94');
bb.tl.lines['Hammersmith'].strings.push('M 1703.45 828.94 L 1808.78 723.63');
bb.tl.lines['Hammersmith'].strings.push('M 1808.78 723.63 C 1811.41 721.03 1814.58 719.18 1817.96 717.76');
bb.tl.lines['Hammersmith'].strings.push('M 1817.96 717.76 C 1821.35 716.37 1824.9 715.43 1828.59 715.41');
bb.tl.lines['Hammersmith'].strings.push('M 1828.59 715.41 L 2049.81 715.42');
bb.tl.lines['Hammersmith'].strings.push('M 2049.81 715.42 C 2049.93 715.42 2050.04 715.42 2050.15 715.42');
bb.tl.lines['Hammersmith'].strings.push('M 2050.15 715.42 C 2051.36 715.4 2053.56 714.94 2055.56 714.09');
bb.tl.lines['Hammersmith'].strings.push('M 2055.56 714.09 C 2057.66 713.25 2059.61 711.96 2060.43 711.1');
bb.tl.lines['Hammersmith'].strings.push('M 2060.43 711.1 L 2171.34 600.2');

bb.tl.lines['Jubilee'] = { strings: [], color: '#939BA0', paths: [], stations: [] };
bb.tl.lines['Jubilee'].strings.push('M 1981.42 578.28 L 2026.52 623.39');
bb.tl.lines['Jubilee'].strings.push('M 2026.52 623.39 C 2029.97 626.84 2032.79 633.64 2032.79 638.51');
bb.tl.lines['Jubilee'].strings.push('M 2032.79 638.51 L 2032.79 920.6');
bb.tl.lines['Jubilee'].strings.push('M 2032.79 920.6 C 2032.79 925.47 2029.97 932.27 2026.52 935.72');
bb.tl.lines['Jubilee'].strings.push('M 2026.52 935.72 L 1967.14 995.11');
bb.tl.lines['Jubilee'].strings.push('M 1967.14 995.11 C 1963.69 998.55 1956.9 1001.37 1952.03 1001.37');
bb.tl.lines['Jubilee'].strings.push('M 1952.03 1001.37 L 1478.45 1001.37');
bb.tl.lines['Jubilee'].strings.push('M 1478.45 1001.37 C 1473.59 1001.37 1466.78 1004.18 1463.33 1007.62');
bb.tl.lines['Jubilee'].strings.push('M 1463.33 1007.62 L 1385.89 1085.08');
bb.tl.lines['Jubilee'].strings.push('M 1385.89 1085.08 C 1382.44 1088.53 1375.64 1091.34 1370.77 1091.34');
bb.tl.lines['Jubilee'].strings.push('M 1370.77 1091.34 L 1222.45 1091.34');
bb.tl.lines['Jubilee'].strings.push('M 1222.45 1091.34 C 1210.75 1091.34 1201.27 1081.86 1201.27 1070.16');
bb.tl.lines['Jubilee'].strings.push('M 1201.27 1070.16 L 1201.24 1033.49');
bb.tl.lines['Jubilee'].strings.push('M 1201.24 1033.49 C 1201.24 1028.62 1198.43 1021.82 1194.99 1018.38');
bb.tl.lines['Jubilee'].strings.push('M 1194.99 1018.38 L 1033.36 857.58');
bb.tl.lines['Jubilee'].strings.push('M 1033.36 857.58 C 1029.92 854.14 1027.1 847.33 1027.1 842.47');
bb.tl.lines['Jubilee'].strings.push('M 1027.1 842.47 L 1027.1 603.39');
bb.tl.lines['Jubilee'].strings.push('M 1027.1 603.39 C 1027.1 598.52 1024.28 591.72 1020.84 588.28');
bb.tl.lines['Jubilee'].strings.push('M 1020.84 588.28 L 766.6 334.04');
bb.tl.lines['Jubilee'].strings.push('M 766.6 334.04 C 763.15 330.6 760.34 323.8 760.34 318.93');
bb.tl.lines['Jubilee'].strings.push('M 760.34 318.93 L 760.34 196.08');

bb.tl.lines['EastLondon'] = { strings: [], color: '#F7931E', paths: [], stations: [] };
bb.tl.lines['EastLondon'].strings.push('M 663.47 539.51 L 663.47 20.27');
bb.tl.lines['EastLondon'].strings.push('M 663.47 20.27');
bb.tl.lines['EastLondon'].strings.push('M 580.72 531.68 C 577.29 535.13 574.46 541.93 574.46 546.8');
bb.tl.lines['EastLondon'].strings.push('M 574.46 546.8');
bb.tl.lines['EastLondon'].strings.push('M 758.14 1081.09 C 758.14 1085.96 760.96 1092.76 764.41 1096.21');
bb.tl.lines['EastLondon'].strings.push('M 764.41 1096.21 L 962.14 1293.94');
bb.tl.lines['EastLondon'].strings.push('M 962.14 1293.94');
bb.tl.lines['EastLondon'].strings.push('M 1982.16 585.92 L 1807.8 585.92');
bb.tl.lines['EastLondon'].strings.push('M 1807.8 585.92 C 1802.93 585.92 1796.12 583.1 1792.69 579.66');
bb.tl.lines['EastLondon'].strings.push('M 1792.69 579.66 L 1723.78 510.76');
bb.tl.lines['EastLondon'].strings.push('M 1723.78 510.76 C 1720.34 507.32 1713.54 504.5 1708.67 504.5');
bb.tl.lines['EastLondon'].strings.push('M 1708.67 504.5 L 1416.72 504.5');
bb.tl.lines['EastLondon'].strings.push('M 1416.72 504.5 C 1411.85 504.5 1405.05 501.68 1401.6 498.24');
bb.tl.lines['EastLondon'].strings.push('M 1401.6 498.24 L 1298.27 394.9');
bb.tl.lines['EastLondon'].strings.push('M 1298.27 394.9 C 1294.82 391.45 1288.02 388.64 1283.14 388.64');
bb.tl.lines['EastLondon'].strings.push('M 1283.14 388.64 L 1153.21 388.64');
bb.tl.lines['EastLondon'].strings.push('M 1153.21 388.64 C 1148.35 388.64 1141.54 391.46 1138.1 394.9');
bb.tl.lines['EastLondon'].strings.push('M 1138.1 394.9 L 1054.56 478.44');
bb.tl.lines['EastLondon'].strings.push('M 1054.56 478.44 C 1051.12 481.89 1044.32 484.7 1039.45 484.7');
bb.tl.lines['EastLondon'].strings.push('M 1039.45 484.7 L 636.55 484.7');
bb.tl.lines['EastLondon'].strings.push('M 636.55 484.7 C 631.68 484.7 624.88 487.52 621.44 490.97');
bb.tl.lines['EastLondon'].strings.push('M 621.44 490.97');
bb.tl.lines['EastLondon'].strings.push('M 515.38 597.02 C 511.94 600.46 509.12 607.27 509.12 612.14');
bb.tl.lines['EastLondon'].strings.push('M 509.12 612.14 L 509.12 931.18');
bb.tl.lines['EastLondon'].strings.push('M 509.12 931.18 C 509.12 936.05 506.3 942.86 502.85 946.3');
bb.tl.lines['EastLondon'].strings.push('M 502.85 946.3 L 451.28 997.91');
bb.tl.lines['EastLondon'].strings.push('M 451.28 997.91 C 446.18 1002.99 443 1010.1 443 1017.89');
bb.tl.lines['EastLondon'].strings.push('M 443 1017.89 C 443 1026.3 443 1177.98 443 1177.98');
bb.tl.lines['EastLondon'].strings.push('M 443 1177.98');
bb.tl.lines['EastLondon'].strings.push('M 2164.63 601.29 L 2164.63 544.53');
bb.tl.lines['EastLondon'].strings.push('M 2164.63 544.53 C 2164.63 539.66 2161.82 532.86 2158.37 529.42');
bb.tl.lines['EastLondon'].strings.push('M 2158.37 529.42 L 2141.21 512.26');
bb.tl.lines['EastLondon'].strings.push('M 2141.21 512.26 C 2137.77 508.81 2130.96 505.99 2126.1 505.99');
bb.tl.lines['EastLondon'].strings.push('M 2126.1 505.99 L 1908.86 505.99');
bb.tl.lines['EastLondon'].strings.push('M 1908.86 505.99 C 1904 505.99 1897.19 503.17 1893.75 499.73');
bb.tl.lines['EastLondon'].strings.push('M 1893.75 499.73 L 1854 459.98');
bb.tl.lines['EastLondon'].strings.push('M 1854 459.98 C 1850.55 456.54 1847.73 449.73 1847.73 444.86');
bb.tl.lines['EastLondon'].strings.push('M 1847.73 444.86 L 1847.73 372.39');
bb.tl.lines['EastLondon'].strings.push('M 1847.73 372.39 C 1847.73 367.52 1844.92 360.72 1841.47 357.27');
bb.tl.lines['EastLondon'].strings.push('M 1841.47 357.27 L 1776.37 292.17');
bb.tl.lines['EastLondon'].strings.push('M 1776.37 292.17 C 1772.94 288.73 1766.13 285.91 1761.26 285.91');
bb.tl.lines['EastLondon'].strings.push('M 1761.26 285.91 L 1531.3 285.91');
bb.tl.lines['EastLondon'].strings.push('M 1531.3 285.91 C 1526.42 285.91 1519.62 288.73 1516.18 292.17');
bb.tl.lines['EastLondon'].strings.push('M 1516.18 292.17 L 1444.59 363.76');
bb.tl.lines['EastLondon'].strings.push('M 1444.59 363.76 C 1441.14 367.2 1434.35 370.02 1429.48 370.02');
bb.tl.lines['EastLondon'].strings.push('M 1429.48 370.02 L 1270.6 370.02');
bb.tl.lines['EastLondon'].strings.push('M 580.77 531.69 C 577.33 535.13 574.5 541.93 574.49 546.8');
bb.tl.lines['EastLondon'].strings.push('M 574.49 546.8 L 574.33 667.68');
bb.tl.lines['EastLondon'].strings.push('M 574.33 667.68 C 574.33 672.54 577.14 679.35 580.58 682.79');
bb.tl.lines['EastLondon'].strings.push('M 580.58 682.79 L 751.91 854.12');
bb.tl.lines['EastLondon'].strings.push('M 751.91 854.12 C 755.34 857.56 758.17 864.37 758.17 869.24');
bb.tl.lines['EastLondon'].strings.push('M 758.17 869.24 L 758.17 1081.08');
bb.tl.lines['EastLondon'].strings.push('M 758.17 1081.08 C 758.17 1085.95 760.99 1092.75 764.43 1096.19');
bb.tl.lines['EastLondon'].strings.push('M 764.43 1096.19 L 962.16 1293.93');
bb.tl.lines['EastLondon'].strings.push('M 962.16 1293.93');
bb.tl.lines['EastLondon'].strings.push('M 1982.14 585.93 L 1807.79 585.93');
bb.tl.lines['EastLondon'].strings.push('M 1807.79 585.93 C 1802.92 585.93 1796.12 583.11 1792.69 579.67');
bb.tl.lines['EastLondon'].strings.push('M 1792.69 579.67 L 1723.78 510.77');
bb.tl.lines['EastLondon'].strings.push('M 1723.78 510.77 C 1720.34 507.33 1713.54 504.51 1708.67 504.51');
bb.tl.lines['EastLondon'].strings.push('M 1708.67 504.51 L 1416.72 504.51');
bb.tl.lines['EastLondon'].strings.push('M 1416.72 504.51 C 1411.86 504.51 1405.06 501.69 1401.61 498.25');
bb.tl.lines['EastLondon'].strings.push('M 1401.61 498.25 L 1298.28 394.91');
bb.tl.lines['EastLondon'].strings.push('M 1298.28 394.91 C 1294.83 391.47 1288.03 388.65 1283.16 388.65');
bb.tl.lines['EastLondon'].strings.push('M 1283.16 388.65 L 1153.24 388.65');
bb.tl.lines['EastLondon'].strings.push('M 1153.24 388.65 C 1148.37 388.65 1141.57 391.47 1138.12 394.91');
bb.tl.lines['EastLondon'].strings.push('M 1138.12 394.91 L 1054.58 478.45');
bb.tl.lines['EastLondon'].strings.push('M 1054.58 478.45 C 1051.14 481.89 1044.34 484.71 1039.47 484.71');
bb.tl.lines['EastLondon'].strings.push('M 1039.47 484.71 L 636.59 484.71');
bb.tl.lines['EastLondon'].strings.push('M 636.59 484.71 C 631.71 484.71 624.91 487.53 621.47 490.97');
bb.tl.lines['EastLondon'].strings.push('M 621.47 490.97 L 515.43 597.02');
bb.tl.lines['EastLondon'].strings.push('M 515.43 597.02 C 511.99 600.46 509.16 607.27 509.16 612.14');
bb.tl.lines['EastLondon'].strings.push('M 509.16 612.14 L 509.16 931.18');
bb.tl.lines['EastLondon'].strings.push('M 509.16 931.18 C 509.16 936.04 506.35 942.84 502.9 946.29');
bb.tl.lines['EastLondon'].strings.push('M 502.9 946.29 L 451.33 997.89');
bb.tl.lines['EastLondon'].strings.push('M 451.33 997.89 C 446.23 1002.98 443.05 1010.1 443.05 1017.87');
bb.tl.lines['EastLondon'].strings.push('M 443.05 1017.87 C 443.05 1026.29 443.05 1178.72 443.05 1178.72');
bb.tl.lines['EastLondon'].strings.push('M 1632.51 1477.4 C 1632.51 1482.94 1630.4 1488.47 1626.17 1492.69');
bb.tl.lines['EastLondon'].strings.push('M 1626.17 1492.69 C 1605.06 1513.8 1567.9 1550.95 1567.9 1550.95');
bb.tl.lines['EastLondon'].strings.push('M 1567.9 1550.95');
bb.tl.lines['EastLondon'].strings.push('M 1734.56 1117.45 C 1734.56 1122.98 1732.44 1128.51 1728.22 1132.74');
bb.tl.lines['EastLondon'].strings.push('M 1728.22 1132.74 C 1720.56 1140.4 1638.84 1222.12 1638.84 1222.12');
bb.tl.lines['EastLondon'].strings.push('M 1638.84 1222.12 C 1634.62 1226.34 1632.51 1230.22 1632.51 1236.08');
bb.tl.lines['EastLondon'].strings.push('M 1632.51 1236.08 L 1632.51 1592.25');
bb.tl.lines['EastLondon'].strings.push('M 1632.51 1592.25');
bb.tl.lines['EastLondon'].strings.push('M 1734.56 1260.3 C 1734.56 1246.48 1734.56 1224.99 1734.56 547.35');
bb.tl.lines['EastLondon'].strings.push('M 1232.85 616.56 L 1190.34 574.05');
bb.tl.lines['EastLondon'].strings.push('M 1190.34 574.05 C 1186.89 570.6 1180.09 567.79 1175.22 567.79');
bb.tl.lines['EastLondon'].strings.push('M 1175.22 567.79 L 678.24 567.79');
bb.tl.lines['EastLondon'].strings.push('M 678.24 567.79 C 674.72 567.84 670.35 566.08 667.82 563.47');
bb.tl.lines['EastLondon'].strings.push('M 667.82 563.47 C 665.3 561.02 663.45 556.68 663.51 553.05');
bb.tl.lines['EastLondon'].strings.push('M 663.51 553.05 L 663.51 20.31');

bb.tl.lines['DLR'] = { strings: [], color: '#00A99D', paths: [], stations: [] };
bb.tl.lines['DLR'].strings.push('M 1985.08 588.48 L 1985.08 602.61');
bb.tl.lines['DLR'].strings.push('M 1985.08 602.61 C 1985.08 607.48 1982.26 614.28 1978.82 617.72');
bb.tl.lines['DLR'].strings.push('M 1978.82 617.72 L 1897.05 699.48');
bb.tl.lines['DLR'].strings.push('M 1897.05 699.48 C 1893.6 702.92 1890.79 708.07 1890.79 713');
bb.tl.lines['DLR'].strings.push('M 1890.79 713 L 1890.79 1355.53');
bb.tl.lines['DLR'].strings.push('M 1682.36 882.69 C 1677.49 882.69 1670.69 885.5 1667.25 888.95');
bb.tl.lines['DLR'].strings.push('M 1667.25 888.95 C 1662.55 893.64 1639.89 916.3 1639.89 916.3');
bb.tl.lines['DLR'].strings.push('M 1639.89 916.3');
bb.tl.lines['DLR'].strings.push('M 1487.84 857.71 L 1640.34 857.71');
bb.tl.lines['DLR'].strings.push('M 1640.34 857.71 C 1645.21 857.71 1652.02 860.54 1655.46 863.97');
bb.tl.lines['DLR'].strings.push('M 1655.46 863.97 L 1667.91 876.42');
bb.tl.lines['DLR'].strings.push('M 1667.91 876.42 C 1671.35 879.86 1678.16 882.68 1683.03 882.68');
bb.tl.lines['DLR'].strings.push('M 1683.03 882.68 L 2148.79 882.68');
bb.tl.lines['DLR'].strings.push('M 2148.79 882.68 C 2153.66 882.68 2160.46 885.49 2163.9 888.94');
bb.tl.lines['DLR'].strings.push('M 2163.9 888.94 L 2351.57 1076.62');
bb.tl.lines['DLR'].strings.push('M 2351.57 1076.62');
bb.tl.lines['DLR'].strings.push('M 1860.84 882.69 C 1865.23 882.69 1871.65 885.5 1875.09 888.95');
bb.tl.lines['DLR'].strings.push('M 1875.09 888.95 L 1884.53 898.39');
bb.tl.lines['DLR'].strings.push('M 1884.53 898.39 C 1887.98 901.83 1890.79 908.63 1890.79 913.5');
bb.tl.lines['DLR'].strings.push('M 1890.79 913.5');
bb.tl.lines['DLR'].strings.push('M 2087.49 882.69 C 2092.36 882.69 2099.16 885.5 2102.61 888.94');
bb.tl.lines['DLR'].strings.push('M 2102.61 888.94 L 2417.17 1203.52');

